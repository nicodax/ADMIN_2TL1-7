# Docker version
version: '2'
services:
    # PHP Apache container
    php-apache-environment:
        container_name: php-apache
        # Build custom PHP Apache image and environment
        build:
            context: ./WEB
            dockerfile: Dockerfile
        depends_on:
            - db
        # Present Working Directory Setup :
        #   copy all files from ./WEB/src/b2b to /var/www/html inside the container
        volumes:
            - ./WEB/src/b2b:/usr/local/apache2/htdocs/b2b/
            - ./WEB/src/www:/usr/local/apache2/htdocs/www/
        # Port mapping from Apache (80) to host (8000)
        ports:
            - 80:80
        dns:
            - 172.16.10.3
        networks:
            default:
                ipv4_address: 172.16.20.2
    # ERP PHP Apache container
    erp-environment:
        container_name: erp
        # Build custom PHP Apache image and environment
        build:
            context: ./SERVICES_INTERNES/ERP
            dockerfile: Dockerfile
        depends_on:
            - db
        # Present Working Directory Setup :
        #   copy all files from ./WEB/src/b2b to /var/www/html inside the container
        volumes:
            - ./SERVICES_INTERNES/ERP/src/b2b:/usr/local/apache2/htdocs/b2b/
        # Port mapping from Apache (80) to host (8000)
        dns:
            - 172.16.10.3
        networks:
            intranet:
                ipv4_address: 172.16.10.4
    # MySQL containerkey
    db:
        container_name: db
        image: mysql
        # Restarts the service whenever any defined configuration changes
        restart: always
        # Environment Variables Setup
        environment:
            MYSQL_ROOT_PASSWORD: root
            MYSQL_DATABASE: b2b
            MYSQL_USER: admin
            MYSQL_PASSWORD: admin
        # Port mapping from MySQL (3306) to host (9906)
        ports:
            - 9906:3306
        dns:
            - 172.16.10.3
        networks:
            intranet:
                ipv4_address: 172.16.10.5
    # MySQL Handler
    phpmyadmin:
        container_name: phpmyadmin 
        image: phpmyadmin/phpmyadmin
        ports:
            - 8080:80
        # Restarts the service whenever any defined configuration changes
        restart: always
        environment:
            PMA_HOST: db
        depends_on:
            - db
        dns:
            - 172.16.10.3
networks:
    default:
      external:
        name: dmz
    intranet:
        external: true


# docker-compose -f web.yml down
# docker network create --driver bridge --subnet 172.16.20.0/24 --gateway 172.16.20.254 dmz
# docker network create --driver bridge --subnet 172.16.10.0/24 --gateway 172.16.10.254 intranet
# docker-compose -f web.yml -p services_web up -d --build

